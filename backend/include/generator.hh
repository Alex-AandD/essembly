#pragma once
#include "bytecodeVisitor.hh"
#include "instruction.hh"
#include <vector>
#include <string>

/* the input of the generator is going to be the AST */
/*  then on the AST we call the visitor, which is going to create an
    unoptimized form of bytecode. The instruction generated by the visitor
    is going to go in the stream vector;
    Then we start optimizing the stream vector
*/

class Generator {
    BytecodeVisitor visitor;
public:
    Generator();
    ~Generator();
public:
    /* here we are going to call the VISITOR for every stmt in the AST and make the visitor give up the resources */
    void generateBytecode();
};